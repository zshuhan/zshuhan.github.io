<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>(✿◡‿◡)胖涵</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zshuhan.github.io/"/>
  <updated>2020-04-17T14:39:59.060Z</updated>
  <id>https://zshuhan.github.io/</id>
  
  <author>
    <name>舍予</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>计算机网络学习笔记（二）之应用层</title>
    <link href="https://zshuhan.github.io/2020/04/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%E4%B9%8B%E5%BA%94%E7%94%A8%E5%B1%82/"/>
    <id>https://zshuhan.github.io/2020/04/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%E4%B9%8B%E5%BA%94%E7%94%A8%E5%B1%82/</id>
    <published>2020-04-17T14:38:36.368Z</published>
    <updated>2020-04-17T14:39:59.060Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="二-应用层"><a class="markdownIt-Anchor" href="#二-应用层"></a> 二、应用层</h2><h3 id="一-网络应用的体系结构"><a class="markdownIt-Anchor" href="#一-网络应用的体系结构"></a> (一) 、网络应用的体系结构</h3><h4 id="1客户机服务器结构"><a class="markdownIt-Anchor" href="#1客户机服务器结构"></a> 1）客户机/服务器结构</h4><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/2020041321341296.png#pic_center"  alt="在这里插入图片描述" /><br /><em><strong>服务器;</strong></em></p><ol><li>7*24小时提供服务</li><li>永久性访问地址</li><li>利用大量服务器实现可拓展性</li></ol><p><em><strong>客户机：</strong></em></p><ol><li>与服务器通信，使用服务器提供的服务</li><li>间歇性接入网络</li><li>可能使用动态IP地址</li><li>不会与其他客户机直接通信</li></ol><h4 id="2p2p结构"><a class="markdownIt-Anchor" href="#2p2p结构"></a> 2）P2P结构</h4><ul><li>没有永远在线的服务器</li><li>任意端系统/节点之间可以直接通讯</li><li>节点间歇性接入网络</li><li>节点可能改变IP地址</li></ul><blockquote><p>优点：高度可伸缩 <br />缺点：难于管理</p></blockquote><h4 id="3混合结构"><a class="markdownIt-Anchor" href="#3混合结构"></a> 3）混合结构</h4><ul><li>文件传输使用P2P结构</li><li>文件的搜索采用C/S结构—集中式</li></ul><h3 id="二-网络应用进程通信"><a class="markdownIt-Anchor" href="#二-网络应用进程通信"></a> （二）、网络应用进程通信</h3><h4 id="1进程主机上运行的应用程序"><a class="markdownIt-Anchor" href="#1进程主机上运行的应用程序"></a> 1）进程：主机上运行的应用程序</h4><ul><li><p>同一主机上进程的通信：采用进程间通信机制，由操作系统提供</p></li><li><p>不同主机上进程的通信：消息交换</p></li><li><p>客户机进程：发起通信的进程（发送请求初始化通信）</p></li><li><p>服务器进程：等待通信的进程（等待来自客户的请求）</p></li></ul><h4 id="2套接字socketip地址端口号"><a class="markdownIt-Anchor" href="#2套接字socketip地址端口号"></a> 2）套接字：socket=IP地址+端口号</h4><pre><code>套接字是提供应用程序创建和使用的数据结构在应用层，客户进程和服务器进程间的通信是两个套接字间的通信</code></pre><p>①套接字地址（通信时需要）</p><ul><li>本地套接字地址+远程套接字地址 （一对套接字地址标识）<br />定义套接字地址：用TCP/IP协议族的标识符定义</li></ul><p>②寻找套接字地址</p><ul><li>服务器站点：<ul><li>本地套接字地址：由操作系统提供</li><li>远程套接字地址：建立连接的客户套接字地址</li></ul></li><li>客户站点：<ul><li>本地套接字地址：由操作系统提供</li><li>远程套接字地址：知道端口号和IP地址<br />知端口号，不知IP地址</li></ul></li></ul><h3 id="三-网络应用的需求与传输层服务"><a class="markdownIt-Anchor" href="#三-网络应用的需求与传输层服务"></a> （三）、网络应用的需求与传输层服务</h3><h4 id="1网络应用对传输服务的需求"><a class="markdownIt-Anchor" href="#1网络应用对传输服务的需求"></a> 1）网络应用对传输服务的需求</h4><ul><li>可靠性、带宽、时延</li></ul><h4 id="2使用的传输服务"><a class="markdownIt-Anchor" href="#2使用的传输服务"></a> 2）使用的传输服务</h4><p><em><strong>①TCP服务:</strong></em></p><ul><li>面向连接：C/S进程间需要建立连接</li><li>流量控制：发送方不会发送速度过快超过接收方的处理能力</li><li>拥塞控制：当网络负载过重时能够限制发送方的发送速度</li><li>不提供最小带保障</li></ul><p><strong>②UDP服务:</strong></p><ul><li>无连接</li><li>不可靠的数据传输</li><li>不提供可靠性保障、流量控制、拥塞控制、延迟保障、带宽保障</li></ul><h3 id="四-web应用"><a class="markdownIt-Anchor" href="#四-web应用"></a> （四）、WEB应用</h3><h4 id="1万维网www"><a class="markdownIt-Anchor" href="#1万维网www"></a> 1）万维网（WWW）</h4><pre><code>由多个网页互相连接，以客户机/服务器的方式工作</code></pre><h4 id="2统一资源定位符url"><a class="markdownIt-Anchor" href="#2统一资源定位符url"></a> 2）统一资源定位符URL</h4><ul><li>一般形式是：&lt;协议&gt;://&lt;主机&gt;:&lt;端口&gt;/&lt;路径&gt;<br />协议包括ftp、http、News<br />主机是存放资源的主机在互联网的域名</li></ul><h4 id="3http协议"><a class="markdownIt-Anchor" href="#3http协议"></a> 3）HTTP协议</h4><pre><code>超文本传输协议：采用C/S结构，使用TCP传输服务，端口号80</code></pre><h5 id="1主要特点"><a class="markdownIt-Anchor" href="#1主要特点"></a> 1.主要特点：</h5><p>面向事务的客户服务器协议<br />无状态：服务器不维护任何有关客户端过去所发请求的信息<br />无连接</p><h5 id="2两类消息"><a class="markdownIt-Anchor" href="#2两类消息"></a> 2.两类消息</h5><h6 id="a请求消息"><a class="markdownIt-Anchor" href="#a请求消息"></a> a)请求消息</h6><p>①从客户向服务器发送报文<br />②通用格式（如图）<br />③上传输入方法：</p><ul><li>POST方法：在请求消息的消息体中上传客户的输入</li><li>URL方法：（使用GET方法）输入信息通过request行的URL字段上传</li></ul><p>④方法类型：</p><ul><li>i.HTTP/1.0 非持久性连接：GET、POST、HEAD</li><li>ii.HTTP/1.1 持久性连接：GET、POST、HEAD、PUT、DELETE</li></ul><h6 id="b响应消息"><a class="markdownIt-Anchor" href="#b响应消息"></a> b)响应消息</h6><p>①从服务器到客户的回答<br />②格式（如图）<br />③HTTP响应状态码：</p><ul><li>1xx表示通知信息</li><li>2xx表示成功</li><li>3xx表示重定向</li><li>4xx表示客户端的差错</li><li>5xx表示服务器的差错</li></ul><h5 id="3请求一个万维网文档所需的时间"><a class="markdownIt-Anchor" href="#3请求一个万维网文档所需的时间"></a> 3.请求一个万维网文档所需的时间</h5><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200413213025685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5NTExNQ==,size_16,color_FFFFFF,t_70#pic_center"  alt="在这里插入图片描述" /><br />TotalTime=2RTT+传输文档的时间</p><h5 id="4持续连接和非持续连接"><a class="markdownIt-Anchor" href="#4持续连接和非持续连接"></a> 4.持续连接和非持续连接</h5><h6 id="1持续连接"><a class="markdownIt-Anchor" href="#1持续连接"></a> 1)持续连接：</h6><ol><li>每个TCP连接允许传输多个对象</li><li>两种工作方式<br />①流水线方式：客户持续发出请求。<br />②非流水线方式：客户只有收到个响应后才能发出下一个请求</li></ol><h6 id="2非持续连接"><a class="markdownIt-Anchor" href="#2非持续连接"></a> 2)非持续连接：</h6><pre><code>每个TCP连接最多允许传输一个对象。每个对象需2RTT</code></pre><h5 id="5http过程"><a class="markdownIt-Anchor" href="#5http过程"></a> 5.HTTP过程</h5><p>(1) URL为http：<a href="//www.abc.com" target="_blank" rel="noopener">//www.abc.com</a>,浏览器分析URL，使用HTTP协议解析。<br />(2) 浏览器向 DNS 请求解析 <a href="http://www.abc.com" target="_blank" rel="noopener">www.abc.com</a> 的 IP 地址，得到其IP地址。<br />(3)浏览器与服务器建立 TCP 连接，目标端口默认80，发送请求GET。<br />(4) 服务器给出响应，把文件 index.htm 发给浏览器。<br />(5) TCP 连接释放。<br />(6) 浏览器将收到的index.html使用html解释并显示给用户。</p><h3 id="五-email应用"><a class="markdownIt-Anchor" href="#五-email应用"></a> （五）、Email应用</h3><h4 id="1组成结构"><a class="markdownIt-Anchor" href="#1组成结构"></a> 1.组成结构</h4><h5 id="1用户代理"><a class="markdownIt-Anchor" href="#1用户代理"></a> 1）用户代理</h5><ul><li>用户与电子邮件系统的接口</li><li>四个功能：撰写、显示、处理、通信</li></ul><h5 id="2邮件服务器"><a class="markdownIt-Anchor" href="#2邮件服务器"></a> 2）邮件服务器</h5><pre><code>使用CS模型、用来发送和接收邮件</code></pre><h5 id="3邮件发送协议smtp和邮件读写协议pop3-imap"><a class="markdownIt-Anchor" href="#3邮件发送协议smtp和邮件读写协议pop3-imap"></a> 3）邮件发送协议（SMTP）和邮件读写协议（POP3、IMAP）</h5><p><strong>①SMTP协议（简单邮件传输协议）</strong></p><ul><li>使用TCP进行email消息的可靠传输</li><li>端口号25</li><li>使用CS模型</li><li>SMTP通信的三个阶段：<br />i.建立连接<br />ii.邮件传送<br />iii.连接释放</li></ul><p><strong>②POP3协议</strong></p><ul><li>使用PULL的方式取出邮件，模型CS，使用TCP传输，端口110</li><li>客户要运行POP客户程序，服务端要运行POP服务程序</li><li>无状态</li><li>特点：只要用户从POP服务端读取了邮件，POP服务器就把该邮件删除</li><li>两种工作模式：下载并保留和下载并删除</li></ul><p><strong>③IMAP协议</strong>：所有消息统一保留在服务器</p><h4 id="2电子邮件的信息格式"><a class="markdownIt-Anchor" href="#2电子邮件的信息格式"></a> 2.电子邮件的信息格式</h4><p>首部+主体</p><ul><li>首部：发件人、收件人和标题</li><li>主体：消息本身（只能是ASCII字符）</li></ul><h4 id="3mime通用互联网邮件扩充"><a class="markdownIt-Anchor" href="#3mime通用互联网邮件扩充"></a> 3.MIME（通用互联网邮件扩充）</h4><ul><li>通过在邮件头部增加额外的行以声明MIME的内容类型</li><li>出现原因：SMTP只能发送英文ASCII，不能发送汉字、图片</li></ul><h3 id="六-dns"><a class="markdownIt-Anchor" href="#六-dns"></a> （六）、DNS</h3><h4 id="1概述"><a class="markdownIt-Anchor" href="#1概述"></a> 1.概述</h4><ul><li>使用CS模型，运行在UDP上，端口号53</li><li>多层命名服务器构成的分布式数据库</li></ul><h4 id="2域名结构"><a class="markdownIt-Anchor" href="#2域名结构"></a> 2.域名结构：</h4><ul><li>….三级域名.二级域名.顶级域名<br />如：<a href="http://www.abc.com" target="_blank" rel="noopener">www.abc.com</a><br />顶级域名有cn，com，net，gov</li></ul><h4 id="3域名服务器"><a class="markdownIt-Anchor" href="#3域名服务器"></a> 3.域名服务器</h4><ul><li><p>分布式DNS系统，以层次方式组织，负责域名-&gt;IP解析</p></li><li><p>类型：（四种）<br />①根域名服务器</p><ul><li>本地域名解析服务器法解析域名时，访问根域名服务器</li><li>管理顶级域名，并不直接解析成IP，而是指向下一步查询哪个顶级域名服务器</li></ul><p>②顶级域名服务器（TLD）</p><ul><li>负责com，org，net，edu等顶级域名和国家顶级域名</li><li>管理所有注册的二级域名</li></ul><p>③权威域名服务器</p><ul><li>组织的域名解析服务器，提供组织内部服务器的解析服务</li></ul><p>④主机域名服务器</p><ul><li>主机发出DNS请求时，就发给本地域名服务器</li></ul><h4 id="4域名解析过程"><a class="markdownIt-Anchor" href="#4域名解析过程"></a> 4.域名解析过程</h4><ul><li>域名到IP称为正向解析，IP到域名称为反向解析</li><li>过程：主机向本地域名服务器的查询一般都是采用递归查询。如果查到，则直接返回IP。本地域名服务器无法解析，则本地域名服务器向根域名服务器的查询通常是采用迭代查询，根域名服务器返回顶级域名地址，然后本地服务器向顶级域名服务器查询。顶级服务器若不能解析，则给出权威域名服务器地址，本地域名服务器向权威域名服务器查询。若查到，则缓存后返回给主机；还查不到，则返回域名解析失败</li></ul></li></ul><h3 id="七-ftp文件传输协议"><a class="markdownIt-Anchor" href="#七-ftp文件传输协议"></a> （七）、FTP（文件传输协议）</h3><pre><code>提供交互的访问，允许客户指明文件的类型与格式，并允许文件具有存取权限。</code></pre><h4 id="1ftp的工作原理"><a class="markdownIt-Anchor" href="#1ftp的工作原理"></a> 1.FTP的工作原理</h4><ul><li>使用CS模型，使用TCP传输。FTP服务器有一个主进程负责新请求，若干从进程负责单个请求</li><li>服务器打开端口21，监听并等待客户连接</li><li>有连接请求后，启动从进程处理连接，然后主进程继续监听</li><li>主进程必须在会话期间保存用户状态，记录用户在远程目录上的当前位置</li></ul><h4 id="2ftp的特点"><a class="markdownIt-Anchor" href="#2ftp的特点"></a> 2.FTP的特点</h4><ul><li>只提供文件传送的一些基本的服务，它使用 TCP 可靠的运输服务</li><li>减少或消除在不同操作系统下处理文件的不兼容性</li><li>使用客户服务器方式</li></ul><h4 id="3ftp的两个连接tcp连接"><a class="markdownIt-Anchor" href="#3ftp的两个连接tcp连接"></a> 3.FTP的两个连接（TCP连接）</h4><p>①控制连接</p><ul><li>端口号21，用来传输连接请求等待控制信息，不能用来传输文件。在文件传输过程中一直处于打开状态，方便及时终止传输</li></ul><p>②数据连接</p><ul><li>端口号20，用来连接客户端和服务端的数据传输进程，传输完毕后该连接关闭</li><li>若要修改服务器上的文件，则先下载下来，修改，再上传上去；若要修改大文件需要全部复制下来</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="计算机网络" scheme="https://zshuhan.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="计算机网络" scheme="https://zshuhan.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络学习笔记（一）</title>
    <link href="https://zshuhan.github.io/2020/04/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://zshuhan.github.io/2020/04/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-04-17T08:19:48.650Z</published>
    <updated>2020-04-17T08:36:55.463Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>正在学习计算机网络，为了方便日后回忆，在此记录自己的学习笔记。</p></blockquote><h1 id="一-计算机网络概述"><a class="markdownIt-Anchor" href="#一-计算机网络概述"></a> 一、计算机网络概述</h1><p>先放上思维导图！方便记忆<br /><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305113359935.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5NTExNQ==,size_16,color_FFFFFF,t_70"  alt="概述思维导图" /></p><h2 id="1互联网"><a class="markdownIt-Anchor" href="#1互联网"></a> 1.互联网</h2><h3 id="11网络的网络"><a class="markdownIt-Anchor" href="#11网络的网络"></a> 1.1网络的网络</h3><ul><li>计算机网络：结点+链路</li><li>互连网：通过路由器把网络互连起来，构成计算机网络</li><li>互联网：特指Internet，是全球最大的、开放的、采用通用协议进行众多网络相连的特定计算机网络。特点：连通性和共享</li><li>主机：与网络相连的计算机</li></ul><h3 id="12互联网基础结构发展的三个阶段"><a class="markdownIt-Anchor" href="#12互联网基础结构发展的三个阶段"></a> 1.2互联网基础结构发展的三个阶段</h3><ul><li>第一阶段：从单个网络ARPANET向互联网发展得过程</li><li>第二阶段：建成三级结构的互联网</li><li>第三阶段：逐渐形成了多层次ISP结构的互联网<br /><em>ISP</em>： 互联网服务提供商</li></ul><h3 id="13互联网的组成"><a class="markdownIt-Anchor" href="#13互联网的组成"></a> 1.3互联网的组成</h3><pre><code> 边缘部分+核心部分</code></pre><p>1.边缘部分</p><ul><li>由所有连接在互联网上的主机（端系统）组成<ul><li>端系统之间的通信：主机A的某个进程与主机B的另一个进程进行通信</li><li>两种通信方式：<br />（1）客户端/服务端方式（C/S方式）：进程之间的服务与被服务<br />（2）对等方式（P2P方式）：不区分服务与被服务关系</li></ul></li><li>用户直接使用来进行通信和资源共享</li></ul><p>2.核心部分</p><ul><li>重要工作者：路由器<ul><li>路由器：实现<strong>分组交换</strong>，<strong>转发</strong>收到的分组</li></ul></li></ul><blockquote><p>疑问：什么是分组交换？</p></blockquote><p>数据交换是实现数据通过网络核心从源主机到另一个主机!</p><p>1.为什么需要数据交换？</p><ul><li>1).链路问题  2).连通性 3).网络规模</li></ul><p>2.什么是交换？</p><ul><li>动态转接——把一条电话线转接到另一条电话线，使之连通</li><li>动态分配传输路线的资源</li></ul><p>3.数据交换的类型<br /><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305152249170.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5NTExNQ==,size_16,color_FFFFFF,t_70"  alt="数据交换类型" /></p><p><mark>注：计算机交换方式绝大多数是分组交换，极少数是电路交换，绝不可能是报文交换</mark></p><h3 id="14计算机网络的类别"><a class="markdownIt-Anchor" href="#14计算机网络的类别"></a> 1.4计算机网络的类别</h3><ol><li>按网络作用范围：<br />广域网、 城域网、局域网、个人区域网</li><li>按网络的使用者：<br />公用网 、专用网</li><li>用来把用户接入互联网的网络</li></ol><h3 id="15计算机性能"><a class="markdownIt-Anchor" href="#15计算机性能"></a> 1.5计算机性能</h3><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200305170531519.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5NTExNQ==,size_16,color_FFFFFF,t_70"  alt="计算机网络的性能" /></p><ol><li>速率：数据的传送速度（单位：bit/s）</li><li>带宽：在单位时间内网络中的某信道所能通过的“<strong>最高数据率</strong>”</li><li>吞吐量：在单位时间内通过某个网络的数据量</li><li>时延：数据从网络的一端传送到另一端所需的时间<br />包括：<br />1） 发送时延<br />2）传播时延<br />3）处理时延<br />4）排队时延<br />总时延=发送时延+传播时延+处理时延+排队时延</li><li>时延带宽积：传播时延 x 带宽</li><li>往返时间RTT：从发送方到接收方总共经历的时间</li><li>利用率：分为信道利用率和网络利用率</li></ol><h3 id="16计算机网络的体系结构"><a class="markdownIt-Anchor" href="#16计算机网络的体系结构"></a> 1.6计算机网络的体系结构</h3><p><img src="/" class="lazyload" data-src="https://img-blog.csdnimg.cn/2020031719475649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5NTExNQ==,size_16,color_FFFFFF,t_70"  alt="在这里插入图片描述" /><br /><mark><strong>体系结构=层+协议</strong></mark>（协议是水平的、服务是垂直的）<br />网络协议：为进行网络的数据交换而建立的规则（标准或约定）</p><ul><li>协议三要素：语法、语义、同步<br />（1）语法：数据与控制信息的结构或格式 。<br />（2）语义：需要发出何种控制信息，完成何种动作以及做出何种响应。<br />（3）同步：事件实现顺序的详细说明。</li></ul><h6 id="1osi的体系结构"><a class="markdownIt-Anchor" href="#1osi的体系结构"></a> 1.OSI的体系结构：</h6><p>（1). 应用层：实现用户的应用程序自之间的通信过程控制<br />（2). 表示层：对数据进行格式变换、加密解密和压缩恢复<br />（3). 会话层：建立、管理和终止会话，以及数据交换<br />（4). 运输层：提供可靠的端-端的数据传输服务<br />（5). 网络层：通过路由选择算法为分组通过通信子网选择适当的传输路径<br />（6). 数据链路层：在物理层提供比特流的基础上，采用差错控制与流量控制方法，使有差错的物理线路变成无差错的数据链路<br />（7). 物理层：利用传输介质为数据链路层提供物理连接，实现比特流的透明传输</p><h5 id="2tcpip的四层协议应用层-运输层-网际层ip-网络接口层"><a class="markdownIt-Anchor" href="#2tcpip的四层协议应用层-运输层-网际层ip-网络接口层"></a> 2.TCP/IP的四层协议：应用层、运输层、网际层IP、网络接口层</h5><h5 id="3-计算机网络综合osi和tcpip的优点采用五层协议的体系结构"><a class="markdownIt-Anchor" href="#3-计算机网络综合osi和tcpip的优点采用五层协议的体系结构"></a> 3. <mark>计算机网络</mark>综合OSI和TCP/IP的优点，采用<mark>五层协议的体系结构</mark></h5><p>（1).应用层 ：该层是体系结构的最高层，直接为用户的应用进程提供服务<br />（2). 运输层：负责向两台主机中进程之间的通信提供通用的数据传输服务。主要使用的两种协议：<br />①传输控制协议（TCP）：提供面向连接的，可靠的数据传输服务（数据传输的单位是报文段）<br />②用户数据报协议（UDP）：提供无连接的，尽最大努力的数据传输服务（数据传输的单位是用户数据报)<br />（3). 网络层：负责为分组交换网上的不同主机提供通信服务。使用IP协议<br />（4). 数据链路层：在两个相邻结点之间传送数据时，数据链路层将网络层提供的IP数据组装成帧，在两个相邻结点间的链路上“透明”地传送帧中的数据<br />（5). 物理层：透明地传送比特流（数据单位是比特）</p><h5 id="4实体-协议-服务和服务访问点"><a class="markdownIt-Anchor" href="#4实体-协议-服务和服务访问点"></a> 4.实体、协议、服务和服务访问点</h5><p>1.实体: 表示任何可发送或接收信息的硬件或软件进程。<br />2.协议: 控制两个对等实体进行通信的规则的集合<br />3.服务：在协议的控制下，两个对等实体间的通信使得本层能够向上一层提供服务。要实现本层协议，还需要使用下层所提供的服务<br />4.服务访问点：在同一系统中相邻两层的实体进行交互</p><p><strong>问题：</strong></p><blockquote><p>Q1：协议与服务的区别与联系<br />答：1）区别：<br />①协议的实现保证了能够向上一层提供服务。本层的服务用户只能看见服务而无法看见下面的协议。下面的协议对上面的服务用户是透明的。<br />②协议是“水平的”，即协议是控制两个对等实体进行通信的规则。但服务是“垂直的”，即服务是由下层通过层间接口向上层提供的。 2）联系：<br />①在协议的控制下，两个对等实体间的通信使得本层能够向上一层提供服务。 ②要实现本层协议，还需要使用下层所提供的服务</p></blockquote><blockquote><p>Q2：TCP/IP与OSI的系统结构进行比较，讨论其异同之处<br />答：1）OSI和TCP/IP的相同点是二者均采用层次结构，而且都是按功能分层。<br />2）OSI和TCP/IP的不同点：<br />①OSI分七层，自下而上分为物理层、数据链路层、网络层、运输层、会话层、表示层和应用层，而TCP/IP分四层：网络接口层、网间网层（IP）、传输层（TCP） 和应用层。<br />②OSI层次间存在严格的调用关系，两个（N）层实体的通信必须通过下一层（N-1）层实体，不能越级，而TCP/IP可以越过紧邻的下一层直接使用更低层次所提供的服务，因而减少了一些不必要的开销，提高了协议的效率<br />③OSI只考虑用一种标准的公用数据网，TCP/IP更侧重于异构网的互联问题</p></blockquote><blockquote><p>Q3：3.如何理解“透明”？<br />答：透明表示某个实际存在的事物看起来却好像不存在一样。比如你电脑上的应用程序，用户只需知道特定的按钮的功能，并不需要知道按钮的功能是怎么实现的</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="计算机网络" scheme="https://zshuhan.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="计算机网络" scheme="https://zshuhan.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://zshuhan.github.io/2020/04/17/hello-world/"/>
    <id>https://zshuhan.github.io/2020/04/17/hello-world/</id>
    <published>2020-04-17T05:02:25.987Z</published>
    <updated>2020-04-17T05:02:25.987Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
